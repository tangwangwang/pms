<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 加载配置属性文件 -->
    <context:property-placeholder location="classpath*:property/database.properties" ignore-unresolvable="true" system-properties-mode="NEVER"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${driverClassName}"/>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <!--初始连接池中的连接数，该值应在minPoolSie与maxPoolSize之间 -->
        <property name="initialSize" value="${initialSize}"/>
        <!--连接池中保留的最小连接数-->
        <property name="minIdle" value="${minIdle}"/>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="600000"/>
        <!-- 配置一个连接在池中最大生存的时间，单位是毫秒 -->
        <property name="maxEvictableIdleTimeMillis" value="900000"/>
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句。-->
        <!-- ## 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用 -->
        <property name="validationQuery" value="${mysql.validationQuery}"/>
        <!--建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，-->
        <!-- ##如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false"/>
        <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
        <property name="defaultAutoCommit" value="true"/>

        <property name="keepAlive" value="true"/>
        <property name="phyMaxUseCount" value="100000"/>
        <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭 -->
        <!--<property name="poolPreparedStatements" value="true"/>-->
        <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。-->
        <!-- 在Druid中，不会存在Oracle下PSCache占用内存过多的问题 -->
        <!--<property name="maxOpenPreparedStatements" value="20"/>-->
        <!-- 拦截器 配置日志监控 -->
        <property name="filters" value="stat"/>
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter"/>
            </list>
        </property>
    </bean>

    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>

</beans>